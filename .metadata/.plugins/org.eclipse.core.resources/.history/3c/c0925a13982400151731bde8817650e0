package edu.mit.blocks.workspace;



import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.ArrayList;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;


// The following class handles reading and writing to myBlocks.xml
// which is a user-defined block library
public class BlockSave {
	private static File file;

	public BlockSave() {
		
		File file = new File("myBlocks.xml");
		boolean isFileExists = true;
		try {
			if (!file.exists()) {
				file.createNewFile();
			}
		} catch (IOException e) {
			System.out.println("File cannot be created!");
		}
		this.file = file;
	if(!isFileExists){
			
			try {
				DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
				DocumentBuilder docBuilder = docFactory.newDocumentBuilder();
		 
				// root elements
				Document doc = docBuilder.newDocument();
				//Element rootElement = doc.createElement("creaate");
				//doc.appendChild(rootElement);
		 
				// write the content into xml file
				TransformerFactory transformerFactory = TransformerFactory.newInstance();
				Transformer transformer = transformerFactory.newTransformer();
				DOMSource source = new DOMSource(doc);
				StreamResult result = new StreamResult(new File(file.getAbsolutePath()));
		 
				// Output to console for testing
				// StreamResult result = new StreamResult(System.out);
		 
				transformer.transform(source, result);
		 
			//	System.out.println("File saved!");
				
			} catch (ParserConfigurationException e) {
				
				e.printStackTrace();
			}catch (TransformerException tfe){
				tfe.printStackTrace();
			}
	 
		}
	}
	
	public static void saveToFile(ArrayList<String> list) {

		BufferedWriter output = null;
		try {

			output = new BufferedWriter(new OutputStreamWriter(
					new FileOutputStream(file)));
			for (int i = 0; i < list.size(); i++) {
				output.write(list.get(i));
				output.newLine();
			}

			if (output != null)
				output.close();
		} catch (IOException e) {
			System.out.println(e.getMessage());

		}

	}

	private static void readTheFile(ArrayList<String> list, File file) {
		BufferedReader input = null;

		try {
			input = new BufferedReader(new FileReader(file));
			input.close();
		} catch (IOException e) {
			System.out.println(e.getMessage());
		}

	}

}
