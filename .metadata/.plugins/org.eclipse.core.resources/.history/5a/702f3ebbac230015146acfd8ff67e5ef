package com.ardublock.translator.block;

import java.util.ArrayList;

import com.ardublock.translator.Translator;
import com.ardublock.translator.block.exception.SocketNullException;
import com.ardublock.translator.block.exception.SubroutineNotDeclaredException;

public class ExecutionBlock extends TranslatorBlock {
	private ArrayList<String> list_variables = new ArrayList<String>();
	public ExecutionBlock(Long blockId, Translator translator,
			String codePrefix, String codeSuffix, String label) {
		super(blockId, translator, codePrefix, codeSuffix, label);
	}

	@Override
	public String toCode() throws SocketNullException,
			SubroutineNotDeclaredException {
		/**
		 * DO NOT add tab in code any more, we'll use arduino to format code, or
		 * the code will duplicated.
		 */
		boolean isDeclaration = true;
		TranslatorBlock translatorBlock = this
				.getRequiredTranslatorBlockAtSocket(0);			
			String ret = translatorBlock.toCode().trim();
			if(!list_variables.isEmpty()){
				for(int i = 0; i < list_variables.size();i++){
					if(list_variables.equals(ret)){
						isDeclaration = false;
					}
				}
			}
			list_variables.add(ret);
		translatorBlock = this.getRequiredTranslatorBlockAtSocket(1);
		if(isDeclaration){
			return "float " + ret +" = " + translatorBlock.toCode() + ";\n";
		}else{
		return ret + " = " + translatorBlock.toCode() + ";\n";
		}
	}
}