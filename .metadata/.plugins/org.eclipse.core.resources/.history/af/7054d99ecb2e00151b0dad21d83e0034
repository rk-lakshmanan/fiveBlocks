package edu.mit.blocks.workspace;

import java.util.ArrayList;

import edu.mit.blocks.codeblocks.Block;

public class MyFunctionBlock {
	private String genusName = null;
	//list of input parameters
	private ArrayList<String> parameterList = null;
	private String returnParameter = null;
	private String setupCode = null;
	private String code = null; 
	public MyFunctionBlock(){
		
	}
	public void generateMyFunctionBlock(Workspace workspace,Block block){
		WorkspaceEnvironment env = workspace.getEnv();
		generateGenusName(env,block);
		generateParameterList(env,block);
		generateReturnParameter(env,block);
	}
	private void generateReturnParameter(WorkspaceEnvironment env, Block block) {
		this.returnParameter = env.getBlock(block.getSocketAt(block.getNumSockets()-2).getBlockID()).getBlockLabel();
		System.out.println("return is 	"+returnParameter	);
	}
	private void generateParameterList(WorkspaceEnvironment env, Block block) {
		int i=1;
		if(block.getSocketAt(i).getBlockID().equals(Block.NULL)){
			System.out.println("null catch");
		}
		while(!block.getSocketAt(i).getBlockID().equals(Block.NULL)){
			System.out.println("i is "+i);
			String label = env.getBlock(block.getSocketAt(0).getBlockID()).getBlockLabel();
			this.parameterList.add(label);
			i++;
		}
		System.out.println("list is"+ this.parameterList);
	}
	private void generateGenusName(WorkspaceEnvironment env, Block block) {
		this.genusName = env.getBlock(block.getSocketAt(0).getBlockID()).getBlockLabel();
		System.out.println("name is"+ this.genusName);
	}

}
