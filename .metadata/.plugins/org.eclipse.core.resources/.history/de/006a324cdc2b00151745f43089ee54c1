package com.ardublock.translator.block;

import com.ardublock.translator.Translator;
import com.ardublock.translator.block.exception.SocketNullException;
import com.ardublock.translator.block.exception.SubroutineNotDeclaredException;


public class ForBlock extends TranslatorBlock{
	public ForBlock(Long blockId, Translator translator, String codePrefix, String codeSuffix, String label)
	{
		super(blockId, translator, codePrefix, codeSuffix, label);
	}

	@Override
	public String toCode() throws SocketNullException, SubroutineNotDeclaredException
	{
		
		String tempInit = getTranslatorBlockAtSocket(0).toCode();
		String init= new String("");
		for(int i= 0;i<tempInit.length();i++){
			if(init.charAt(i)=='='&&init.charAt(i+1)=='='){
				i++;
			}
			init+=tempInit.charAt(i);
		}
		init = "float "+init;
		System.out.println(init +"init is ");
		String cond = getTranslatorBlockAtSocket(1).toCode();
		String step = getTranslatorBlockAtSocket(2).toCode();
		String var = new String("")	;
		for(int i = 0;i<init.length();i++){
			if(init.charAt(i)=='='){
				break;
			}
			var+=init.charAt(i);
		}
		step = var+"+="+step;
		String execution = "";
		if(!isTranslatorBlockAtSocketNull(3)){
			execution = getTranslatorBlockAtSocket(3).toCode();
		}
		System.out.println("init is "+init+ " cond is "+cond+" step is "+step);
		return "for("+init+" ; "+cond+" ; "+step+" ){\n"+execution+"\n}\n";
		
	}
}
